generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Post {
    id              String   @id @default(cuid())
    title           String
    postDescription String
    content         String?
    image           String?
    published       Boolean  @default(false)
    createdAt       DateTime @default(now())
    updatedAt       DateTime @updatedAt
    author          User?    @relation("UserPosts", fields: [authorId], references: [id])
    likedBy         User[]   @relation("PostLikes")
    authorId        String?

    tags Tag[] @relation("PostTags")
}

model Tag {
    id    String @id @default(cuid())
    name  String @unique
    posts Post[] @relation("PostTags")

    @@map("tags")
}

model Account {
    id                 String  @id @default(cuid())
    userId             String  @map("user_id")
    type               String
    provider           String
    providerAccountId  String  @map("provider_account_id")
    refresh_token      String?
    access_token       String?
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?
    session_state      String?
    oauth_token_secret String?
    oauth_token        String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique @map("session_token")
    userId       String   @map("user_id")
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model User {
    id              String    @id @default(cuid())
    name            String?
    email           String?   @unique
    emailVerified   DateTime? @map("email_verified")
    image           String?
    createdAt       DateTime  @default(now()) @map(name: "created_at")
    updatedAt       DateTime  @updatedAt @map(name: "updated_at")
    posts           Post[]    @relation("UserPosts")
    likedPosts      Post[]    @relation("PostLikes")
    accounts        Account[]
    sessions        Session[]
    role            String    @default("USER")
    selfDescription String?

    @@map(name: "users")
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
    @@map("verificationtokens")
}
